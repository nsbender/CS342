1. Consider the following relation for published books:

  BOOK (Book_title, Author_name, Book_type, List_price, Author_affil, Publisher)

Author_affil refers to the affiliation of author. Suppose the following dependencies exist:

  Book_title → Publisher, Book_type
  Book_type → List_price
  Author_name → Author_affil

a. What normal form is the relation in? Explain your answer.

	All fields in this relation are atomic, and thus it is in at least 1NF.
	It is not in 2NF, and thus 3NF or BCNF since there are functional dependencies based on candidate keys.

b. Apply normalization until you cannot decompose the relations further. State the reasons behind each decomposition.

	Book(id*, title, typeId**, publisherId**, AuthorId**)
	Type(id*, name, listPrice)
	Author(id* name, affiliation)
	
	This new schema is in BCNF, since all candidate keys determine the rest of the fields, and all
	left hand sides are candidates. The new id fields make each index unique. There are no multivalued
	dependencies as demonstrated below:
	
	bookId -> title, typeId, publisherId, authorId
	typeId -> name, listPrice
	authorId -> name, affiliation
	

2. Consider the relation [with the data listed in the shown table]:

	BOOK (Book_Name, Author, Edition, Year)

a. Based on a common-sense understanding of the above data, what are the possible candidate keys of this 
relation?

	Book_Name and Author alone do not create a candidate key since there are possible repeats from between
	editiions that have the same author and title. Possilbe candidate keys include:
		Book_Name, Author, Edition
		Book_Name, Author, Copyright_year
		Book_Name, Author, Edition, Copyright_year
		
b. Justify that this relation has the MVD { Book } →→ { Author } | { Edition, Year }.

	Because there are two different editions, two differnt years, and two authors there ends up being four
	entries for one Book_Name.
	
c. 